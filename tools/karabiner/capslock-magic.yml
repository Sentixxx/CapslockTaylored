---
title: Capslock Enhancement - Magic Semicolon to Hyper
url: https://vonng.com/capslock.json
version: 3.0.3
maintainers: [ {Vonng, miozus} ]
author: Vonng(rh@vonng.com)
website: http://capslock.vonng.com
json_url: https://vonng.com/capslock.json
import_url: karabiner://karabiner/assets/complex_modifications/import?url=https://vonng.com/capslock.json
gallery_url: https://ke-complex-modifications.pqrs.org/#emulation-modes
repo: https://github.com/Vonng/Capslock


rules:


  ################################################################
  #                    Semicolon to Hyper                        #
  ################################################################
  - description: Semicolon to Hyper
    manipulators:

      - description: 'semicolon = ;(click) | hyper(hold)'
        type: basic
        from: { key_code: semicolon, modifiers: { optional: [ any ] } }
        # map holding semicolon to a complex space which can be used again
        # capslock outside, aims to remain English Punctuation
        to: [ { key_code: fn, modifiers: [ right_command,right_control,right_option ] } ]
        to_if_alone: [ { key_code: semicolon } ]

      - description: '; + space = enter'
        type: basic
        from: { key_code: spacebar , modifiers: { mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ { key_code: return_or_enter } ]

      - description: '; + a = *'
        type: basic
        from: { key_code: a , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ { key_code: '8' , modifiers: [ left_shift ] }]

      - description: '; + i = :'
        type: basic
        from: { key_code: i , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: semicolon, modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + q = ('
        type: basic
        from: { key_code: q , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: '9' , modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + c = .'
        type: basic
        from: { key_code: c , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: period }, {"key_code": "caps_lock"} ]

      - description: '; + u = $'
        type: basic
        from: { key_code: u , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: '4' , modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + e = ^'
        type: basic
        from: { key_code: e , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: '6' , modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + d = ='
        type: basic
        from: { key_code: d , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: equal_sign }, {"key_code": "caps_lock"} ]

      - description: '; + s = <'
        type: basic
        from: { key_code: s , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: comma, modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + f = >'
        type: basic
        from: { key_code: f , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: period, modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + r = &'
        type: basic
        from: { key_code: r , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: '7' , modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + v = |'
        type: basic
        from: { key_code: v , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: backslash, modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + g = {!}'
        type: basic
        from: { key_code: g , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: '1' , modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + y = @'
        type: basic
        from: { key_code: y , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: '2' , modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + x = _'
        type: basic
        from: { key_code: x , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: hyphen, modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + h = `%'
        type: basic
        from: { key_code: h , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ { key_code: '5' , modifiers: [ left_shift ] }]

      - description: '; + b = {'
        type: basic
        from: { key_code: b , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: open_bracket, modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + j = {text}`;'
        type: basic
        from: { key_code: j , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: semicolon }, {"key_code": "caps_lock"} ]

      - description: '; + k = ``'
        type: basic
        from: { key_code: k , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: grave_accent_and_tilde }, {"key_code": "caps_lock"} ]

      - description: '; + l = `"'
        type: basic
        from: { key_code: l , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: quote, modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + w = {#}'
        type: basic
        from: { key_code: w , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: '3' , modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + n = {+}'
        type: basic
        from: { key_code: n , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: equal_sign, modifiers: [ left_shift ] }, {"key_code": "caps_lock"} ]

      - description: '; + m = -'
        type: basic
        from: { key_code: m , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ {"key_code": "caps_lock"}, { key_code: hyphen }, {"key_code": "caps_lock"} ]

      # 照顾60配列键盘: Esc ~ ` 三合一, 原生操作要 shift Fn1 esc 才能按出来
      - description: '; + t = ~'
        type: basic
        from: { key_code: t , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ { key_code: grave_accent_and_tilde, modifiers: [ left_shift ] } ]

      - description: '; + shift + t = {space 4}'
        type: basic
        from: { key_code: t , modifiers: {  mandatory: [ left_shift,right_command,right_control,fn,right_option ] } }
        to: [ { key_code: spacebar }, { key_code: spacebar }, { key_code: spacebar }, { key_code: spacebar } ]

      - description: '; + z = ⌘ z'
        type: basic
        from: { key_code: z , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ { key_code: z, modifiers: [ left_command ] } ]

      - description: '; + o = switch languge '
        type: basic
        from: { key_code: o , modifiers: {  mandatory: [ right_command,right_control,fn,right_option ] } }
        to: [ { key_code: spacebar, modifiers: [ left_control ] } ]

